const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');
const path = require('path');
const { exec } = require('child_process');

const OWNER_IDS = [1424509648, 393422971, 2134847831]; // –ú–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö Telegram user ID
const TELEGRAM_TOKEN = '7882415806:AAGKIWslOZtVsK-EIHyHdIrM0jNS73BAnkM';
const WHATSAPP_PM2_NAME = 'whatsapp-bot';

const bot = new TelegramBot(TELEGRAM_TOKEN, { polling: true });

console.log('ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω');

function onlyOwner(msg) {
  if (!OWNER_IDS.includes(msg.from.id)) {
    bot.sendMessage(msg.chat.id, '‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞. –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –±–æ—Ç–∞.');
    return false;
  }
  return true;
}

// 1. /qr - –ü–æ–ª—É—á–∏—Ç—å QR-–∫–æ–¥
bot.onText(/\/qr/, (msg) => {
  if (!onlyOwner(msg)) return;
  
  const qrPath = path.join(__dirname, 'qr.png');
  if (fs.existsSync(qrPath)) {
    const stats = fs.statSync(qrPath);
    const fileSize = (stats.size / 1024).toFixed(1);
    const modifiedTime = stats.mtime.toLocaleString('ru-RU');
    
    bot.sendPhoto(msg.chat.id, fs.createReadStream(qrPath), {
      caption: `üì± QR –∫–æ–¥ WhatsApp\nüìè –†–∞–∑–º–µ—Ä: ${fileSize}KB\nüìÖ –°–æ–∑–¥–∞–Ω: ${modifiedTime}`
    });
  } else {
    bot.sendMessage(msg.chat.id, '‚ùå QR –∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ WhatsApp –±–æ—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.');
  }
});

// 2. /status - –°—Ç–∞—Ç—É—Å –±–æ—Ç–æ–≤
bot.onText(/\/status/, (msg) => {
  if (!onlyOwner(msg)) return;
  
  exec('pm2 list', (err, stdout, stderr) => {
    if (err) {
      bot.sendMessage(msg.chat.id, '‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: ' + stderr);
      return;
    }
    
    const lines = stdout.split('\n');
    let statusMessage = 'üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–æ–≤:\n\n';
    
    lines.forEach(line => {
      if (line.includes('whatsapp-bot') || line.includes('telegram-bot')) {
        statusMessage += line + '\n';
      }
    });
    
    bot.sendMessage(msg.chat.id, statusMessage);
  });
});

// 3. /restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å WhatsApp –±–æ—Ç–∞
bot.onText(/\/restart/, (msg) => {
  if (!onlyOwner(msg)) return;
  
  bot.sendMessage(msg.chat.id, 'üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é WhatsApp –±–æ—Ç–∞...');
  
  exec(`pm2 restart ${WHATSAPP_PM2_NAME}`, (err, stdout, stderr) => {
    if (err) {
      bot.sendMessage(msg.chat.id, '‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: ' + stderr);
      return;
    }
    
    bot.sendMessage(msg.chat.id, '‚úÖ WhatsApp –±–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    
    // –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º QR –∫–æ–¥ –µ—Å–ª–∏ –µ—Å—Ç—å
    setTimeout(() => {
      const qrPath = path.join(__dirname, 'qr.png');
      if (fs.existsSync(qrPath)) {
        bot.sendPhoto(msg.chat.id, fs.createReadStream(qrPath), {
          caption: 'üì± –ù–æ–≤—ã–π QR –∫–æ–¥ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞'
        });
      }
    }, 3000);
  });
});

// 4. /clear - –û—á–∏—Å—Ç–∏—Ç—å —Å–µ—Å—Å–∏—é –∏ QR –∫–æ–¥
bot.onText(/\/clear/, (msg) => {
  if (!onlyOwner(msg)) return;
  
  bot.sendMessage(msg.chat.id, 'üßπ –û—á–∏—â–∞—é —Å–µ—Å—Å–∏—é –∏ QR –∫–æ–¥...');
  
  let clearedItems = [];
  
  // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é
  const sessionPath = path.join(__dirname, 'LynxSession');
  if (fs.existsSync(sessionPath)) {
    fs.rmSync(sessionPath, { recursive: true, force: true });
    clearedItems.push('üóÇÔ∏è –°–µ—Å—Å–∏—è WhatsApp');
  }
  
  // –û—á–∏—â–∞–µ–º QR –∫–æ–¥
  const qrPath = path.join(__dirname, 'qr.png');
  if (fs.existsSync(qrPath)) {
    fs.unlinkSync(qrPath);
    clearedItems.push('üì± QR –∫–æ–¥');
  }
  
  // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
  const tmpPath = path.join(__dirname, 'tmp');
  if (fs.existsSync(tmpPath)) {
    const tmpFiles = fs.readdirSync(tmpPath);
    tmpFiles.forEach(file => {
      if (file.includes('qr') || file.endsWith('.png') || file.endsWith('.jpg')) {
        fs.unlinkSync(path.join(tmpPath, file));
      }
    });
    clearedItems.push('üìÅ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã');
  }
  
  const message = clearedItems.length > 0 
    ? `‚úÖ –û—á–∏—â–µ–Ω–æ:\n${clearedItems.map(item => `  ‚Ä¢ ${item}`).join('\n')}`
    : '‚ÑπÔ∏è –ù–µ—á–µ–≥–æ –æ—á–∏—â–∞—Ç—å';
    
  bot.sendMessage(msg.chat.id, message);
});

// 5. /logs - –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
bot.onText(/\/logs/, (msg) => {
  if (!onlyOwner(msg)) return;
  
  exec(`pm2 logs ${WHATSAPP_PM2_NAME} --lines 10 --nostream`, { maxBuffer: 1024 * 1024 }, (err, stdout, stderr) => {
    if (err) {
      bot.sendMessage(msg.chat.id, '‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤: ' + stderr);
      return;
    }
    
    const logs = stdout.trim();
    if (logs) {
      // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏ –µ—Å–ª–∏ –ª–æ–≥ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π
      if (logs.length > 4000) {
        const parts = logs.match(/.{1,4000}/g);
        parts.forEach((part, index) => {
          bot.sendMessage(msg.chat.id, `üìã –õ–æ–≥–∏ WhatsApp (—á–∞—Å—Ç—å ${index + 1}):\n\`\`\`\n${part}\n\`\`\``, { parse_mode: 'Markdown' });
        });
      } else {
        bot.sendMessage(msg.chat.id, `üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ WhatsApp:\n\`\`\`\n${logs}\n\`\`\``, { parse_mode: 'Markdown' });
      }
    } else {
      bot.sendMessage(msg.chat.id, '‚ÑπÔ∏è –õ–æ–≥–∏ –ø—É—Å—Ç—ã –∏–ª–∏ WhatsApp –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω');
    }
  });
});

// 6. /help - –ü–æ–º–æ—â—å
bot.onText(/\/help/, (msg) => {
  if (!onlyOwner(msg)) return;
  
  const helpMessage = `ü§ñ –ö–æ–º–∞–Ω–¥—ã Telegram –±–æ—Ç–∞:

üì± /qr - –ü–æ–ª—É—á–∏—Ç—å QR –∫–æ–¥ WhatsApp
üìä /status - –°—Ç–∞—Ç—É—Å –±–æ—Ç–æ–≤
üîÑ /restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å WhatsApp –±–æ—Ç–∞
üßπ /clear - –û—á–∏—Å—Ç–∏—Ç—å —Å–µ—Å—Å–∏—é –∏ QR –∫–æ–¥
üìã /logs - –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ WhatsApp
‚ùì /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üí° –î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è WhatsApp:
1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /clear –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /restart –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /qr –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è QR –∫–æ–¥–∞
4. –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR –∫–æ–¥ –≤ WhatsApp`;

  bot.sendMessage(msg.chat.id, helpMessage);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ Telegram –±–æ—Ç–∞:', error);
});

bot.on('polling_error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ polling:', error);
});

console.log('‚úÖ Telegram –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /qr, /status, /restart, /clear, /logs, /help');
