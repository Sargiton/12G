const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');
const path = require('path');
const { exec } = require('child_process');

const OWNER_IDS = [1424509648, 393422971, 2134847831]; // –ú–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö Telegram user ID
const TELEGRAM_TOKEN = '7882415806:AAGKIWslOZtVsK-EIHyHdIrM0jNS73BAnkM';
const WHATSAPP_PM2_NAME = 'whatsapp-bot';

const bot = new TelegramBot(TELEGRAM_TOKEN, { polling: true });

// –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã)
let cacheManager, messageQueue, performanceMonitor, mediaProcessor, pluginManager;

try {
  cacheManager = require('./lib/cache.js');
  messageQueue = require('./lib/queue.js');
  performanceMonitor = require('./lib/monitor.js');
  mediaProcessor = require('./lib/mediaProcessor.js');
  pluginManager = require('./lib/pluginManager.js');
} catch (error) {
  console.log('–ú–æ–¥—É–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
}

function onlyOwner(msg) {
  if (!OWNER_IDS.includes(msg.from.id)) {
    bot.sendMessage(msg.chat.id, '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.');
    return false;
  }
  return true;
}

// –ü–æ–ª—É—á–∏—Ç—å QR-–∫–æ–¥
bot.onText(/\/get_qr/, (msg) => {
  if (!onlyOwner(msg)) return;
  const qrPath = path.join(__dirname, 'qr.png');
  if (fs.existsSync(qrPath)) {
    bot.sendPhoto(msg.chat.id, fs.createReadStream(qrPath));
  } else {
    bot.sendMessage(msg.chat.id, '–§–∞–π–ª qr.png –Ω–µ –Ω–∞–π–¥–µ–Ω.');
  }
});

// –°–±—Ä–æ—Å–∏—Ç—å —Å–µ—Å—Å–∏—é
bot.onText(/\/reset_session/, (msg) => {
  if (!onlyOwner(msg)) return;
  const sessionPath = path.join(__dirname, 'LynxSession');
  if (fs.existsSync(sessionPath)) {
    fs.rmSync(sessionPath, { recursive: true, force: true });
    bot.sendMessage(msg.chat.id, '–ü–∞–ø–∫–∞ LynxSession —É–¥–∞–ª–µ–Ω–∞. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ WhatsApp-–±–æ—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ QR-–∫–æ–¥–∞.');
  } else {
    bot.sendMessage(msg.chat.id, '–ü–∞–ø–∫–∞ LynxSession –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
  }
});

// –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å WhatsApp-–±–æ—Ç–∞
bot.onText(/\/restart_whatsapp/, (msg) => {
  if (!onlyOwner(msg)) return;
  exec(`pm2 restart ${WHATSAPP_PM2_NAME}`, (err, stdout, stderr) => {
    if (err) return bot.sendMessage(msg.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ: ' + stderr);
    bot.sendMessage(msg.chat.id, 'WhatsApp-–±–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω.');
  });
});

// –ó–∞–ø—É—Å—Ç–∏—Ç—å WhatsApp-–±–æ—Ç–∞
bot.onText(/\/start_whatsapp/, (msg) => {
  if (!onlyOwner(msg)) return;
  exec(`pm2 start ${WHATSAPP_PM2_NAME}`, (err, stdout, stderr) => {
    if (err) return bot.sendMessage(msg.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: ' + stderr);
    bot.sendMessage(msg.chat.id, 'WhatsApp-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω.');
  });
});

// –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å WhatsApp-–±–æ—Ç–∞
bot.onText(/\/stop_whatsapp/, (msg) => {
  if (!onlyOwner(msg)) return;
  exec(`pm2 stop ${WHATSAPP_PM2_NAME}`, (err, stdout, stderr) => {
    if (err) return bot.sendMessage(msg.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ: ' + stderr);
    bot.sendMessage(msg.chat.id, 'WhatsApp-–±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');
  });
});

// –°—Ç–∞—Ç—É—Å WhatsApp-–±–æ—Ç–∞
bot.onText(/\/status/, (msg) => {
  if (!onlyOwner(msg)) return;
  exec(`pm2 show ${WHATSAPP_PM2_NAME}`, (err, stdout, stderr) => {
    if (err) return bot.sendMessage(msg.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: ' + stderr);
    bot.sendMessage(msg.chat.id, '–°—Ç–∞—Ç—É—Å WhatsApp-–±–æ—Ç–∞:\n' + stdout);
  });
});

// –õ–æ–≥–∏ WhatsApp-–±–æ—Ç–∞
bot.onText(/\/logs/, (msg) => {
  if (!onlyOwner(msg)) return;
  exec(`pm2 logs ${WHATSAPP_PM2_NAME} --lines 30 --nostream`, { maxBuffer: 1024 * 1024 }, (err, stdout, stderr) => {
    if (err) return bot.sendMessage(msg.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ª–æ–≥–æ–≤: ' + stderr);
    bot.sendMessage(msg.chat.id, '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ WhatsApp-–±–æ—Ç–∞:\n' + stdout.slice(-4000));
  });
});

// –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ (git pull)
bot.onText(/\/update_code/, (msg) => {
  if (!onlyOwner(msg)) return;
  exec('git pull', (err, stdout, stderr) => {
    if (err) return bot.sendMessage(msg.chat.id, '–û—à–∏–±–∫–∞ git pull: ' + stderr);
    bot.sendMessage(msg.chat.id, '–†–µ–∑—É–ª—å—Ç–∞—Ç git pull:\n' + stdout);
  });
});

// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (npm install)
bot.onText(/\/npm_install/, (msg) => {
  if (!onlyOwner(msg)) return;
  exec('npm install', (err, stdout, stderr) => {
    if (err) return bot.sendMessage(msg.chat.id, '–û—à–∏–±–∫–∞ npm install: ' + stderr);
    bot.sendMessage(msg.chat.id, '–†–µ–∑—É–ª—å—Ç–∞—Ç npm install:\n' + stdout);
  });
});

// –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å: —É–¥–∞–ª–∏—Ç—å —Å–µ—Å—Å–∏—é, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å WhatsApp-–±–æ—Ç–∞, –ø—Ä–∏—Å–ª–∞—Ç—å QR
bot.onText(/\/full_reset/, async (msg) => {
  if (!onlyOwner(msg)) return;
  const sessionPath = path.join(__dirname, 'LynxSession');
  if (fs.existsSync(sessionPath)) {
    fs.rmSync(sessionPath, { recursive: true, force: true });
    bot.sendMessage(msg.chat.id, '–ü–∞–ø–∫–∞ LynxSession —É–¥–∞–ª–µ–Ω–∞. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é WhatsApp-–±–æ—Ç–∞...');
  } else {
    bot.sendMessage(msg.chat.id, '–ü–∞–ø–∫–∞ LynxSession –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é WhatsApp-–±–æ—Ç–∞...');
  }
  exec(`pm2 restart ${WHATSAPP_PM2_NAME}`, (err, stdout, stderr) => {
    if (err) return bot.sendMessage(msg.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ WhatsApp-–±–æ—Ç–∞: ' + stderr);
    setTimeout(() => {
      const qrPath = path.join(__dirname, 'qr.png');
      if (fs.existsSync(qrPath)) {
        bot.sendPhoto(msg.chat.id, fs.createReadStream(qrPath));
      } else {
        bot.sendMessage(msg.chat.id, '–§–∞–π–ª qr.png –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥.');
      }
    }, 5000);
  });
});

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–∞–º—è—Ç–∏
bot.onText(/\/memory/, (msg) => {
  if (!onlyOwner(msg)) return;
  
  const memUsage = process.memoryUsage();
  const rssMB = (memUsage.rss / 1024 / 1024).toFixed(1);
  const heapUsedMB = (memUsage.heapUsed / 1024 / 1024).toFixed(1);
  const heapTotalMB = (memUsage.heapTotal / 1024 / 1024).toFixed(1);
  
  exec('free -m', (err, stdout, stderr) => {
    let systemInfo = '';
    if (!err) {
      const lines = stdout.split('\n');
      const memLine = lines[1].split(/\s+/);
      const totalMB = memLine[1];
      const usedMB = memLine[2];
      const freeMB = memLine[3];
      systemInfo = `\nüíª –°–∏—Å—Ç–µ–º–Ω–∞—è –ø–∞–º—è—Ç—å:\n   –í—Å–µ–≥–æ: ${totalMB}MB\n   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${usedMB}MB\n   –°–≤–æ–±–æ–¥–Ω–æ: ${freeMB}MB`;
    }
    
    const message = `üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:\n\nü§ñ –ü—Ä–æ—Ü–µ—Å—Å:\n   RSS: ${rssMB}MB\n   Heap Used: ${heapUsedMB}MB\n   Heap Total: ${heapTotalMB}MB${systemInfo}`;
    bot.sendMessage(msg.chat.id, message);
  });
});

// –û—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏
bot.onText(/\/clean_memory/, (msg) => {
  if (!onlyOwner(msg)) return;
  
  exec('pm2 restart whatsapp-bot', (err, stdout, stderr) => {
    if (err) {
      bot.sendMessage(msg.chat.id, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ø–∞–º—è—Ç–∏: ' + stderr);
    } else {
      bot.sendMessage(msg.chat.id, '‚úÖ –ü–∞–º—è—Ç—å –æ—á–∏—â–µ–Ω–∞. WhatsApp –±–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω.');
    }
  });
});

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
bot.onText(/\/system_stats/, (msg) => {
  if (!onlyOwner(msg)) return;
  
  exec('top -bn1 | grep "Cpu(s)" | sed "s/.*, *\\([0-9.]*\\)%* id.*/\\1/" | awk \'{print 100 - $1}\'', (err, cpuOutput) => {
    exec('df -h / | tail -1 | awk \'{print $5}\'', (err2, diskOutput) => {
      const cpuUsage = cpuOutput.trim() || 'N/A';
      const diskUsage = diskOutput.trim() || 'N/A';
      
      const message = `üñ•Ô∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:\n\nüíª CPU: ${cpuUsage}%\nüíæ –î–∏—Å–∫: ${diskUsage} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ\n\nüìä PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã:`;
      
      exec('pm2 list', (err3, pm2Output) => {
        const fullMessage = message + '\n' + (pm2Output || '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ PM2');
        bot.sendMessage(msg.chat.id, fullMessage);
      });
    });
  });
});

// –ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫—ç—à–∞
bot.onText(/\/cache_stats/, async (msg) => {
  if (!onlyOwner(msg)) return;
  
  if (!cacheManager) {
    return bot.sendMessage(msg.chat.id, '‚ùå –ú–æ–¥—É–ª—å –∫—ç—à–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
  }
  
  try {
    const stats = await cacheManager.getStats();
    const message = `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞:\n\n` +
      `üî¥ Redis:\n` +
      `   –°—Ç–∞—Ç—É—Å: ${stats.redis.connected ? '‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω'}\n` +
      `   –ö–ª—é—á–µ–π: ${stats.redis.keys || 'N/A'}\n` +
      `   –ü–∞–º—è—Ç—å: ${stats.redis.memory || 'N/A'}\n\n` +
      `üîµ NodeCache:\n` +
      `   –ö–ª—é—á–µ–π: ${stats.nodeCache.keys}\n` +
      `   –ü–∞–º—è—Ç—å: ${stats.nodeCache.memory}MB\n` +
      `   Hit Rate: ${stats.nodeCache.hitRate}%\n\n` +
      `üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n` +
      `   –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: ${stats.total.requests}\n` +
      `   –ü–æ–ø–∞–¥–∞–Ω–∏–π: ${stats.total.hits}\n` +
      `   –ü—Ä–æ–º–∞—Ö–æ–≤: ${stats.total.misses}\n` +
      `   Hit Rate: ${stats.total.hitRate}%`;
    
    bot.sendMessage(msg.chat.id, message);
  } catch (error) {
    bot.sendMessage(msg.chat.id, `‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—ç—à–∞: ${error.message}`);
  }
});

// –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
bot.onText(/\/clear_cache/, async (msg) => {
  if (!onlyOwner(msg)) return;
  
  if (!cacheManager) {
    return bot.sendMessage(msg.chat.id, '‚ùå –ú–æ–¥—É–ª—å –∫—ç—à–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
  }
  
  try {
    await cacheManager.flush();
    bot.sendMessage(msg.chat.id, '‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω');
  } catch (error) {
    bot.sendMessage(msg.chat.id, `‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞: ${error.message}`);
  }
});

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—á–µ—Ä–µ–¥–µ–π
bot.onText(/\/queue_stats/, async (msg) => {
  if (!onlyOwner(msg)) return;
  
  if (!messageQueue) {
    return bot.sendMessage(msg.chat.id, '‚ùå –ú–æ–¥—É–ª—å –æ—á–µ—Ä–µ–¥–µ–π –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
  }
  
  try {
    const stats = await messageQueue.getStats();
    const message = `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–µ—Ä–µ–¥–µ–π:\n\n` +
      `üö® –í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç:\n` +
      `   –û–∂–∏–¥–∞–µ—Ç: ${stats.highPriority.waiting}\n` +
      `   –ê–∫—Ç–∏–≤–Ω—ã–µ: ${stats.highPriority.active}\n` +
      `   –ó–∞–≤–µ—Ä—à–µ–Ω–æ: ${stats.highPriority.completed}\n` +
      `   –û—à–∏–±–∫–∏: ${stats.highPriority.failed}\n\n` +
      `üì® –û–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\n` +
      `   –û–∂–∏–¥–∞–µ—Ç: ${stats.normal.waiting}\n` +
      `   –ê–∫—Ç–∏–≤–Ω—ã–µ: ${stats.normal.active}\n` +
      `   –ó–∞–≤–µ—Ä—à–µ–Ω–æ: ${stats.normal.completed}\n` +
      `   –û—à–∏–±–∫–∏: ${stats.normal.failed}\n\n` +
      `üé¨ –ú–µ–¥–∏–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞:\n` +
      `   –û–∂–∏–¥–∞–µ—Ç: ${stats.media.waiting}\n` +
      `   –ê–∫—Ç–∏–≤–Ω—ã–µ: ${stats.media.active}\n` +
      `   –ó–∞–≤–µ—Ä—à–µ–Ω–æ: ${stats.media.completed}\n` +
      `   –û—à–∏–±–∫–∏: ${stats.media.failed}\n\n` +
      `üåê API –∑–∞–ø—Ä–æ—Å—ã:\n` +
      `   –û–∂–∏–¥–∞–µ—Ç: ${stats.api.waiting}\n` +
      `   –ê–∫—Ç–∏–≤–Ω—ã–µ: ${stats.api.active}\n` +
      `   –ó–∞–≤–µ—Ä—à–µ–Ω–æ: ${stats.api.completed}\n` +
      `   –û—à–∏–±–∫–∏: ${stats.api.failed}`;
    
    bot.sendMessage(msg.chat.id, message);
  } catch (error) {
    bot.sendMessage(msg.chat.id, `‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—á–µ—Ä–µ–¥–µ–π: ${error.message}`);
  }
});

// –û—á–∏—Å—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–µ–π
bot.onText(/\/clear_queues/, async (msg) => {
  if (!onlyOwner(msg)) return;
  
  if (!messageQueue) {
    return bot.sendMessage(msg.chat.id, '‚ùå –ú–æ–¥—É–ª—å –æ—á–µ—Ä–µ–¥–µ–π –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
  }
  
  try {
    await messageQueue.clearAll();
    bot.sendMessage(msg.chat.id, '‚úÖ –í—Å–µ –æ—á–µ—Ä–µ–¥–∏ –æ—á–∏—â–µ–Ω—ã');
  } catch (error) {
    bot.sendMessage(msg.chat.id, `‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–µ–π: ${error.message}`);
  }
});

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–ª–∞–≥–∏–Ω–æ–≤
bot.onText(/\/plugin_stats/, async (msg) => {
  if (!onlyOwner(msg)) return;
  
  if (!pluginManager) {
    return bot.sendMessage(msg.chat.id, '‚ùå –ú–æ–¥—É–ª—å –ø–ª–∞–≥–∏–Ω–æ–≤ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
  }
  
  try {
    const stats = await pluginManager.getPluginStats();
    const message = `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤:\n\n` +
      `üìÅ –í—Å–µ–≥–æ –ø–ª–∞–≥–∏–Ω–æ–≤: ${stats.total}\n` +
      `‚ö° –ó–∞–≥—Ä—É–∂–µ–Ω–æ: ${stats.loaded}\n` +
      `üí§ –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${stats.unloaded}\n` +
      `‚ùå –û—à–∏–±–∫–∏: ${stats.errors}\n\n` +
      `üìà –¢–æ–ø –ø–ª–∞–≥–∏–Ω–æ–≤ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:\n` +
      `${stats.topUsed.slice(0, 5).map((plugin, i) => 
        `${i + 1}. ${plugin.name}: ${plugin.usage} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π`
      ).join('\n')}\n\n` +
      `üïí –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏:\n` +
      `${stats.recentErrors.slice(0, 3).map(error => 
        `‚Ä¢ ${error.plugin}: ${error.error}`
      ).join('\n')}`;
    
    bot.sendMessage(msg.chat.id, message);
  } catch (error) {
    bot.sendMessage(msg.chat.id, `‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–ª–∞–≥–∏–Ω–æ–≤: ${error.message}`);
  }
});

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –º–µ–¥–∏–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
bot.onText(/\/media_stats/, async (msg) => {
  if (!onlyOwner(msg)) return;
  
  if (!mediaProcessor) {
    return bot.sendMessage(msg.chat.id, '‚ùå –ú–æ–¥—É–ª—å –º–µ–¥–∏–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
  }
  
  try {
    const stats = await mediaProcessor.getStats();
    const message = `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–µ–¥–∏–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:\n\n` +
      `üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:\n` +
      `   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${stats.images.processed}\n` +
      `   –û—à–∏–±–∫–∏: ${stats.images.errors}\n` +
      `   –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: ${stats.images.avgTime}ms\n\n` +
      `üé• –í–∏–¥–µ–æ:\n` +
      `   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${stats.videos.processed}\n` +
      `   –û—à–∏–±–∫–∏: ${stats.videos.errors}\n` +
      `   –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: ${stats.videos.avgTime}ms\n\n` +
      `üéµ –ê—É–¥–∏–æ:\n` +
      `   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${stats.audio.processed}\n` +
      `   –û—à–∏–±–∫–∏: ${stats.audio.errors}\n` +
      `   –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: ${stats.audio.avgTime}ms\n\n` +
      `üíæ –ö—ç—à –º–µ–¥–∏–∞:\n` +
      `   –§–∞–π–ª–æ–≤ –≤ –∫—ç—à–µ: ${stats.cache.files}\n` +
      `   –†–∞–∑–º–µ—Ä –∫—ç—à–∞: ${stats.cache.size}MB\n` +
      `   –í—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: ${stats.cache.tempFiles}`;
    
    bot.sendMessage(msg.chat.id, message);
  } catch (error) {
    bot.sendMessage(msg.chat.id, `‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–µ–¥–∏–∞: ${error.message}`);
  }
});

// –û—á–∏—Å—Ç–∫–∞ –º–µ–¥–∏–∞ –∫—ç—à–∞
bot.onText(/\/clear_media_cache/, async (msg) => {
  if (!onlyOwner(msg)) return;
  
  if (!mediaProcessor) {
    return bot.sendMessage(msg.chat.id, '‚ùå –ú–æ–¥—É–ª—å –º–µ–¥–∏–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
  }
  
  try {
    await mediaProcessor.cleanupMediaCache();
    await mediaProcessor.cleanupTempFiles();
    bot.sendMessage(msg.chat.id, '‚úÖ –ú–µ–¥–∏–∞ –∫—ç—à –æ—á–∏—â–µ–Ω');
  } catch (error) {
    bot.sendMessage(msg.chat.id, `‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –º–µ–¥–∏–∞ –∫—ç—à–∞: ${error.message}`);
  }
});

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
bot.onText(/\/performance/, async (msg) => {
  if (!onlyOwner(msg)) return;
  
  if (!performanceMonitor) {
    return bot.sendMessage(msg.chat.id, '‚ùå –ú–æ–¥—É–ª—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
  }
  
  try {
    const stats = await performanceMonitor.getPerformanceStats();
    const systemInfo = await performanceMonitor.getSystemInfo();
    
    const message = `üìä –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±–æ—Ç–∞:\n\n` +
      `‚ö° –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π:\n` +
      `   –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: ${stats.messageProcessing.avgTime}ms\n` +
      `   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: ${stats.messageProcessing.maxTime}ms\n` +
      `   –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${stats.messageProcessing.total}\n\n` +
      `üíæ –ü–∞–º—è—Ç—å:\n` +
      `   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${stats.memory.used}MB\n` +
      `   –í—Å–µ–≥–æ: ${stats.memory.total}MB\n` +
      `   –ü—Ä–æ—Ü–µ–Ω—Ç: ${stats.memory.percentage}%\n\n` +
      `üñ•Ô∏è CPU:\n` +
      `   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${stats.cpu.usage}%\n` +
      `   –ù–∞–≥—Ä—É–∑–∫–∞: ${stats.cpu.load}\n\n` +
      `‚ùå –û—à–∏–±–∫–∏:\n` +
      `   –í—Å–µ–≥–æ: ${stats.errors.total}\n` +
      `   –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å: ${stats.errors.lastHour}\n\n` +
      `üîç –ö—ç—à:\n` +
      `   Hit Rate: ${stats.cache.hitRate}%\n` +
      `   –ó–∞–ø—Ä–æ—Å–æ–≤: ${stats.cache.requests}\n` +
      `   –ü–æ–ø–∞–¥–∞–Ω–∏–π: ${stats.cache.hits}\n\n` +
      `üìà –û—á–µ—Ä–µ–¥–∏:\n` +
      `   –í—Å–µ–≥–æ –∑–∞–¥–∞—á: ${stats.queues.totalJobs}\n` +
      `   –ê–∫—Ç–∏–≤–Ω—ã—Ö: ${stats.queues.activeJobs}\n` +
      `   –û–∂–∏–¥–∞—é—â–∏—Ö: ${stats.queues.waitingJobs}`;
    
    bot.sendMessage(msg.chat.id, message);
  } catch (error) {
    bot.sendMessage(msg.chat.id, `‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: ${error.message}`);
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
bot.onText(/\/health_check/, async (msg) => {
  if (!onlyOwner(msg)) return;
  
  if (!performanceMonitor) {
    return bot.sendMessage(msg.chat.id, '‚ùå –ú–æ–¥—É–ª—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
  }
  
  try {
    const health = await performanceMonitor.runHealthChecks();
    let message = `üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã:\n\n`;
    
    health.forEach(check => {
      const status = check.status ? '‚úÖ' : '‚ùå';
      message += `${status} ${check.name}: ${check.message}\n`;
    });
    
    const allHealthy = health.every(check => check.status);
    message += `\n${allHealthy ? 'üéâ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!' : '‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã!'}`;
    
    bot.sendMessage(msg.chat.id, message);
  } catch (error) {
    bot.sendMessage(msg.chat.id, `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è: ${error.message}`);
  }
});

// –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
bot.onText(/\/optimize_all/, async (msg) => {
  if (!onlyOwner(msg)) return;
  
  try {
    let results = [];
    
    // –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    if (cacheManager) {
      try {
        await cacheManager.flush();
        results.push('‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω');
      } catch (error) {
        results.push('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞');
      }
    }
    
    // –û—á–∏—Å—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–µ–π
    if (messageQueue) {
      try {
        await messageQueue.clearAll();
        results.push('‚úÖ –û—á–µ—Ä–µ–¥–∏ –æ—á–∏—â–µ–Ω—ã');
      } catch (error) {
        results.push('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–µ–π');
      }
    }
    
    // –û—á–∏—Å—Ç–∫–∞ –º–µ–¥–∏–∞ –∫—ç—à–∞
    if (mediaProcessor) {
      try {
        await mediaProcessor.cleanupMediaCache();
        await mediaProcessor.cleanupTempFiles();
        results.push('‚úÖ –ú–µ–¥–∏–∞ –∫—ç—à –æ—á–∏—â–µ–Ω');
      } catch (error) {
        results.push('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –º–µ–¥–∏–∞ –∫—ç—à–∞');
      }
    }
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞
    if (global.gc) {
      global.gc();
      results.push('‚úÖ –°–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
    }
    
    // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ WhatsApp –±–æ—Ç–∞
    exec(`pm2 restart ${WHATSAPP_PM2_NAME}`, (err, stdout, stderr) => {
      if (err) {
        results.push('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ WhatsApp –±–æ—Ç–∞');
      } else {
        results.push('‚úÖ WhatsApp –±–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω');
      }
      
      const message = `üîß –ü–æ–ª–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞:\n\n${results.join('\n')}`;
      bot.sendMessage(msg.chat.id, message);
    });
    
  } catch (error) {
    bot.sendMessage(msg.chat.id, `‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: ${error.message}`);
  }
});

// –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
bot.onText(/\/system_info/, async (msg) => {
  if (!onlyOwner(msg)) return;
  
  try {
    const memUsage = process.memoryUsage();
    const uptime = process.uptime();
    const nodeVersion = process.version;
    const platform = process.platform;
    
    exec('cat /proc/loadavg', (err, loadOutput) => {
      exec('df -h / | tail -1', (err2, diskOutput) => {
        exec('free -m | grep Mem', (err3, memOutput) => {
          
          const load = loadOutput ? loadOutput.trim() : 'N/A';
          const disk = diskOutput ? diskOutput.trim() : 'N/A';
          const mem = memOutput ? memOutput.trim() : 'N/A';
          
          const message = `üñ•Ô∏è –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:\n\n` +
            `ü§ñ –ü—Ä–æ—Ü–µ—Å—Å:\n` +
            `   Node.js: ${nodeVersion}\n` +
            `   –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${platform}\n` +
            `   –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${Math.floor(uptime / 3600)}—á ${Math.floor((uptime % 3600) / 60)}–º\n` +
            `   RSS: ${(memUsage.rss / 1024 / 1024).toFixed(1)}MB\n` +
            `   Heap Used: ${(memUsage.heapUsed / 1024 / 1024).toFixed(1)}MB\n` +
            `   Heap Total: ${(memUsage.heapTotal / 1024 / 1024).toFixed(1)}MB\n\n` +
            `üíª –°–∏—Å—Ç–µ–º–∞:\n` +
            `   –ù–∞–≥—Ä—É–∑–∫–∞: ${load}\n` +
            `   –î–∏—Å–∫: ${disk}\n` +
            `   –ü–∞–º—è—Ç—å: ${mem}`;
          
          bot.sendMessage(msg.chat.id, message);
        });
      });
    });
    
  } catch (error) {
    bot.sendMessage(msg.chat.id, `‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ: ${error.message}`);
  }
});

// –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º

// –£–º–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ QR-–∫–æ–¥–∞
bot.onText(/\/smart_qr/, async (msg) => {
  if (!onlyOwner(msg)) return;
  
  try {
    bot.sendMessage(msg.chat.id, 'üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å WhatsApp –±–æ—Ç–∞...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
    exec(`pm2 show ${WHATSAPP_PM2_NAME}`, async (err, stdout, stderr) => {
      if (err) {
        bot.sendMessage(msg.chat.id, '‚ùå WhatsApp –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞—é...');
        exec(`pm2 start ${WHATSAPP_PM2_NAME}`, (err2, stdout2, stderr2) => {
          if (err2) {
            bot.sendMessage(msg.chat.id, '‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ WhatsApp –±–æ—Ç–∞');
            return;
          }
          setTimeout(() => sendQRCode(msg.chat.id), 10000); // –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥
        });
      } else {
        // –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º QR-–∫–æ–¥
        const qrPath = path.join(__dirname, 'qr.png');
        if (fs.existsSync(qrPath)) {
          const stats = fs.statSync(qrPath);
          const fileAge = Date.now() - stats.mtime.getTime();
          
          if (fileAge > 5 * 60 * 1000) { // QR —Å—Ç–∞—Ä—à–µ 5 –º–∏–Ω—É—Ç
            bot.sendMessage(msg.chat.id, '‚ö†Ô∏è QR-–∫–æ–¥ —É—Å—Ç–∞—Ä–µ–ª. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...');
            await resetAndRestart(msg.chat.id);
          } else {
            bot.sendMessage(msg.chat.id, '‚úÖ QR-–∫–æ–¥ –∞–∫—Ç—É–∞–ª–µ–Ω');
            bot.sendPhoto(msg.chat.id, fs.createReadStream(qrPath));
          }
        } else {
          bot.sendMessage(msg.chat.id, 'üì± QR-–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...');
          await resetAndRestart(msg.chat.id);
        }
      }
    });
  } catch (error) {
    bot.sendMessage(msg.chat.id, `‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
  }
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –±–æ—Ç–æ–º
bot.onText(/\/fix_bot/, async (msg) => {
  if (!onlyOwner(msg)) return;
  
  try {
    bot.sendMessage(msg.chat.id, 'üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º...');
    
    const results = [];
    
    // 1. –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    if (cacheManager) {
      try {
        await cacheManager.flush();
        results.push('‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω');
      } catch (error) {
        results.push('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞');
      }
    }
    
    // 2. –û—á–∏—Å—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–µ–π
    if (messageQueue) {
      try {
        await messageQueue.clearAll();
        results.push('‚úÖ –û—á–µ—Ä–µ–¥–∏ –æ—á–∏—â–µ–Ω—ã');
      } catch (error) {
        results.push('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–µ–π');
      }
    }
    
    // 3. –û—á–∏—Å—Ç–∫–∞ –º–µ–¥–∏–∞ –∫—ç—à–∞
    if (mediaProcessor) {
      try {
        await mediaProcessor.cleanupMediaCache();
        await mediaProcessor.cleanupTempFiles();
        results.push('‚úÖ –ú–µ–¥–∏–∞ –∫—ç—à –æ—á–∏—â–µ–Ω');
      } catch (error) {
        results.push('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –º–µ–¥–∏–∞ –∫—ç—à–∞');
      }
    }
    
    // 4. –°–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞
    if (global.gc) {
      global.gc();
      results.push('‚úÖ –°–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
    }
    
    // 5. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ WhatsApp –±–æ—Ç–∞
    exec(`pm2 restart ${WHATSAPP_PM2_NAME}`, (err, stdout, stderr) => {
      if (err) {
        results.push('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ WhatsApp –±–æ—Ç–∞');
      } else {
        results.push('‚úÖ WhatsApp –±–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω');
      }
      
      const message = `üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ:\n\n${results.join('\n')}\n\nüì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –∫–æ–º–∞–Ω–¥–æ–π /status`;
      bot.sendMessage(msg.chat.id, message);
    });
    
  } catch (error) {
    bot.sendMessage(msg.chat.id, `‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${error.message}`);
  }
});

// –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
bot.onText(/\/quick_check/, async (msg) => {
  if (!onlyOwner(msg)) return;
  
  try {
    bot.sendMessage(msg.chat.id, 'üîç –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã...');
    
    const checks = [];
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ WhatsApp –±–æ—Ç–∞
    exec(`pm2 show ${WHATSAPP_PM2_NAME}`, (err, stdout, stderr) => {
      if (err) {
        checks.push('‚ùå WhatsApp –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω');
      } else {
        checks.push('‚úÖ WhatsApp –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç');
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏
      const memUsage = process.memoryUsage();
      const rssMB = (memUsage.rss / 1024 / 1024).toFixed(1);
      if (rssMB > 500) {
        checks.push(`‚ö†Ô∏è –í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${rssMB}MB`);
      } else {
        checks.push(`‚úÖ –ü–∞–º—è—Ç—å –≤ –Ω–æ—Ä–º–µ: ${rssMB}MB`);
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ QR-–∫–æ–¥–∞
      const qrPath = path.join(__dirname, 'qr.png');
      if (fs.existsSync(qrPath)) {
        const stats = fs.statSync(qrPath);
        const fileAge = Date.now() - stats.mtime.getTime();
        if (fileAge > 5 * 60 * 1000) {
          checks.push('‚ö†Ô∏è QR-–∫–æ–¥ —É—Å—Ç–∞—Ä–µ–ª');
        } else {
          checks.push('‚úÖ QR-–∫–æ–¥ –∞–∫—Ç—É–∞–ª–µ–Ω');
        }
      } else {
        checks.push('‚ùå QR-–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª–µ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
      if (cacheManager) checks.push('‚úÖ –ú–æ–¥—É–ª—å –∫—ç—à–∞ –¥–æ—Å—Ç—É–ø–µ–Ω');
      if (messageQueue) checks.push('‚úÖ –ú–æ–¥—É–ª—å –æ—á–µ—Ä–µ–¥–µ–π –¥–æ—Å—Ç—É–ø–µ–Ω');
      if (performanceMonitor) checks.push('‚úÖ –ú–æ–¥—É–ª—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω');
      
      const message = `üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:\n\n${checks.join('\n')}`;
      bot.sendMessage(msg.chat.id, message);
    });
    
  } catch (error) {
    bot.sendMessage(msg.chat.id, `‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: ${error.message}`);
  }
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
bot.onText(/\/auto_update/, async (msg) => {
  if (!onlyOwner(msg)) return;
  
  try {
    bot.sendMessage(msg.chat.id, 'üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ...');
    
    const results = [];
    
    // 1. Git pull
    exec('git pull', (err, stdout, stderr) => {
      if (err) {
        results.push('‚ùå –û—à–∏–±–∫–∞ git pull');
      } else {
        results.push('‚úÖ –ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω');
      }
      
      // 2. NPM install
      exec('npm install', (err2, stdout2, stderr2) => {
        if (err2) {
          results.push('‚ùå –û—à–∏–±–∫–∞ npm install');
        } else {
          results.push('‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
        }
        
        // 3. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
        exec(`pm2 restart ${WHATSAPP_PM2_NAME}`, (err3, stdout3, stderr3) => {
          if (err3) {
            results.push('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞');
          } else {
            results.push('‚úÖ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω');
          }
          
          const message = `üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ:\n\n${results.join('\n')}\n\nüì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥`;
          bot.sendMessage(msg.chat.id, message);
        });
      });
    });
    
  } catch (error) {
    bot.sendMessage(msg.chat.id, `‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${error.message}`);
  }
});

// –ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º
bot.onText(/\/help_me/, async (msg) => {
  if (!onlyOwner(msg)) return;
  
  const helpMessage = `ü§ñ –ü–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ä–µ—à–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º:\n\n` +
    `üîß **–ü—Ä–æ–±–ª–µ–º—ã —Å QR-–∫–æ–¥–æ–º:**\n` +
    `   /smart_qr - –ü–æ–ª—É—á–∏—Ç—å —Ä–∞–±–æ—á–∏–π QR-–∫–æ–¥\n` +
    `   /fix_bot - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ\n\n` +
    `üîç **–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:**\n` +
    `   /quick_check - –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞\n` +
    `   /performance - –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n` +
    `   /health_check - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è\n\n` +
    `üîÑ **–û–±–Ω–æ–≤–ª–µ–Ω–∏—è:**\n` +
    `   /auto_update - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ\n` +
    `   /optimize_all - –ü–æ–ª–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è\n\n` +
    `üìä **–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:**\n` +
    `   /cache_stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞\n` +
    `   /queue_stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–µ—Ä–µ–¥–µ–π\n` +
    `   /plugin_stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤\n\n` +
    `üö® **–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:**\n` +
    `   /restart_whatsapp - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n` +
    `   /full_reset - –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å\n\n` +
    `üí° **–°–æ–≤–µ—Ç—ã:**\n` +
    `‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /smart_qr –≤–º–µ—Å—Ç–æ /get_qr\n` +
    `‚Ä¢ /fix_bot —Ä–µ—à–∞–µ—Ç –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø—Ä–æ–±–ª–µ–º\n` +
    `‚Ä¢ /quick_check –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏\n` +
    `‚Ä¢ /auto_update –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π`;
  
  bot.sendMessage(msg.chat.id, helpMessage);
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

async function resetAndRestart(chatId) {
  try {
    // –£–¥–∞–ª—è–µ–º —Å–µ—Å—Å–∏—é
    const sessionPath = path.join(__dirname, 'LynxSession');
    if (fs.existsSync(sessionPath)) {
      fs.rmSync(sessionPath, { recursive: true, force: true });
    }
    
    // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    exec(`pm2 restart ${WHATSAPP_PM2_NAME}`, (err, stdout, stderr) => {
      if (err) {
        bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ WhatsApp –±–æ—Ç–∞');
        return;
      }
      
      bot.sendMessage(chatId, '‚úÖ WhatsApp –±–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é QR-–∫–æ–¥...');
      
      // –ñ–¥–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º QR-–∫–æ–¥
      setTimeout(() => sendQRCode(chatId), 15000); // 15 —Å–µ–∫—É–Ω–¥
    });
  } catch (error) {
    bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
  }
}

function sendQRCode(chatId) {
  const qrPath = path.join(__dirname, 'qr.png');
  if (fs.existsSync(qrPath)) {
    bot.sendMessage(chatId, 'üì± –ù–æ–≤—ã–π QR-–∫–æ–¥ –≥–æ—Ç–æ–≤:');
    bot.sendPhoto(chatId, fs.createReadStream(qrPath));
  } else {
    bot.sendMessage(chatId, '‚ùå QR-–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É.');
  }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ —Å –Ω–æ–≤—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
bot.onText(/\/(start|help)/, (msg) => {
  if (!onlyOwner(msg)) return;
  bot.sendMessage(msg.chat.id, `–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è WhatsApp-–±–æ—Ç–æ–º.\n\nüöÄ **–£–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n/smart_qr ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–±–æ—á–∏–π QR-–∫–æ–¥\n/fix_bot ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º\n/quick_check ‚Äî –±—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞\n/auto_update ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ\n/help_me ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ä–µ—à–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º\n\nüìã **–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n/get_qr ‚Äî –ø–æ–ª—É—á–∏—Ç—å QR-–∫–æ–¥\n/reset_session ‚Äî —Å–±—Ä–æ—Å–∏—Ç—å —Å–µ—Å—Å–∏—é\n/restart_whatsapp ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å WhatsApp-–±–æ—Ç–∞\n/start_whatsapp ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å WhatsApp-–±–æ—Ç–∞\n/stop_whatsapp ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å WhatsApp-–±–æ—Ç–∞\n/status ‚Äî —Å—Ç–∞—Ç—É—Å WhatsApp-–±–æ—Ç–∞\n/logs ‚Äî –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ WhatsApp-–±–æ—Ç–∞\n\nüìä **–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:**\n/cache_stats ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞\n/clear_cache ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à\n/queue_stats ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–µ—Ä–µ–¥–µ–π\n/clear_queues ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥–∏\n/plugin_stats ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤\n/media_stats ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–µ–¥–∏–∞\n/clear_media_cache ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –º–µ–¥–∏–∞ –∫—ç—à\n/performance ‚Äî –æ–±—â–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n/health_check ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è\n/optimize_all ‚Äî –ø–æ–ª–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è\n/system_info ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ\n\nüîß **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:**\n/update_code ‚Äî git pull\n/npm_install ‚Äî npm install\n/full_reset ‚Äî –ø–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å\n/memory ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏\n/clean_memory ‚Äî –æ—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏\n/system_stats ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã\n\nüí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**\n‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /smart_qr –≤–º–µ—Å—Ç–æ /get_qr\n‚Ä¢ /fix_bot —Ä–µ—à–∞–µ—Ç –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø—Ä–æ–±–ª–µ–º\n‚Ä¢ /help_me –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏\n\n/help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É`);
}); 