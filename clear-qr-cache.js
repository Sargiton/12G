import fs from 'fs';
import path from 'path';

console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ QR –∫–æ–¥–æ–≤...');

// –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
const tmpDir = './tmp';
if (fs.existsSync(tmpDir)) {
    const files = fs.readdirSync(tmpDir);
    files.forEach(file => {
        if (file.includes('qr') || file.includes('QR') || file.endsWith('.png') || file.endsWith('.jpg')) {
            try {
                fs.unlinkSync(path.join(tmpDir, file));
                console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω: ${file}`);
            } catch (err) {
                console.log(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è ${file}:`, err.message);
            }
        }
    });
}

// –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –≤ storage
const storageDir = './storage/data';
if (fs.existsSync(storageDir)) {
    const files = fs.readdirSync(storageDir);
    files.forEach(file => {
        if (file.includes('cache') || file.includes('qr')) {
            try {
                fs.unlinkSync(path.join(storageDir, file));
                console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω –∫—ç—à: ${file}`);
            } catch (err) {
                console.log(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫—ç—à–∞ ${file}:`, err.message);
            }
        }
    });
}

// –û—á–∏—Å—Ç–∫–∞ QR —Ñ–∞–π–ª–æ–≤ –≤ –∫–æ—Ä–Ω–µ
const rootFiles = fs.readdirSync('.');
rootFiles.forEach(file => {
    if (file.includes('qr') || file.includes('QR') || file === 'qr.png' || file === 'qr.jpg') {
        try {
            fs.unlinkSync(file);
            console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω QR —Ñ–∞–π–ª: ${file}`);
        } catch (err) {
            console.log(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è QR —Ñ–∞–π–ª–∞ ${file}:`, err.message);
        }
    }
});

console.log('‚úÖ –ö—ç—à QR –∫–æ–¥–æ–≤ –æ—á–∏—â–µ–Ω!');
console.log('üîÑ –¢–µ–ø–µ—Ä—å –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—Ä–æ—Å–µ QR –∫–æ–¥–∞ –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π.');
