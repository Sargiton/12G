#!/bin/bash

echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –ü–†–û–ë–õ–ï–ú"
echo "============================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏–∏
echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏–∏..."
node --version
npm --version

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
cd /root/12G

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã..."
pm2 stop all 2>/dev/null
pm2 delete all 2>/dev/null
pkill -f node 2>/dev/null
sleep 3

# –û—á–∏—â–∞–µ–º –≤—Å–µ –∫—ç—à–∏ –∏ —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã
echo "üßπ –û—á–∏—â–∞–µ–º –≤—Å–µ –∫—ç—à–∏..."
npm cache clean --force
rm -rf node_modules
rm -f package-lock.json
rm -rf LynxSession/*
rm -rf BackupSession/*
rm -f qr.png qr.jpg
rm -rf tmp/*

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º package.json
echo "üìù –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json..."
if ! grep -q '"@whiskeysockets/baileys": "6.5.0"' package.json; then
    echo "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è baileys –≤ package.json"
    sed -i 's/"@whiskeysockets\/baileys": ".*"/"@whiskeysockets\/baileys": "6.5.0"/g' package.json
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
npm install --force

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º baileys –æ—Ç–¥–µ–ª—å–Ω–æ –∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º baileys –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ..."
npm install @whiskeysockets/baileys@6.5.0 --save-exact --force
npm install baileys@6.5.0 --save-exact --force

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É baileys
echo "‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É baileys..."
if [ -d "node_modules/@whiskeysockets/baileys" ]; then
    echo "‚úÖ @whiskeysockets/baileys —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    ls -la node_modules/@whiskeysockets/baileys/package.json
else
    echo "‚ùå @whiskeysockets/baileys –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

if [ -d "node_modules/baileys" ]; then
    echo "‚úÖ baileys —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    ls -la node_modules/baileys/package.json
else
    echo "‚ùå baileys –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏
echo "üìÅ –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏..."
mkdir -p LynxSession BackupSession tmp logs

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —Ñ–∞–π–ª–æ–≤
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —Ñ–∞–π–ª–æ–≤..."
if node -c index.js; then
    echo "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å index.js –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤ index.js"
fi

if node -c telegram-bot.cjs; then
    echo "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å telegram-bot.cjs –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤ telegram-bot.cjs"
fi

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PM2
echo "üìù –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PM2..."
cat > ecosystem-fixed.config.cjs << 'EOF'
module.exports = {
  apps: [
    {
      name: 'whatsapp-bot',
      script: 'index.js',
      cwd: '/root/12G',
      instances: 1,
      autorestart: true,
      watch: false,
      max_memory_restart: '200M',
      env: {
        NODE_ENV: 'production',
        NODE_OPTIONS: '--max-old-space-size=512'
      },
      error_file: './logs/whatsapp-error-0.log',
      out_file: './logs/whatsapp-out-0.log',
      log_file: './logs/whatsapp-combined-0.log',
      time: true
    },
    {
      name: 'telegram-bot',
      script: 'telegram-bot.cjs',
      cwd: '/root/12G',
      instances: 1,
      autorestart: true,
      watch: false,
      max_memory_restart: '100M',
      env: {
        NODE_ENV: 'production'
      },
      error_file: './logs/telegram-error-1.log',
      out_file: './logs/telegram-out-1.log',
      log_file: './logs/telegram-combined-1.log',
      time: true
    }
  ]
};
EOF

# –¢–µ—Å—Ç–∏—Ä—É–µ–º QR –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
echo "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º QR –≥–µ–Ω–µ—Ä–∞—Ü–∏—é..."
cat > test-qr-fix.js << 'EOF'
import { default as makeWASocket, DisconnectReason, useMultiFileAuthState } from '@whiskeysockets/baileys'
import pino from 'pino'
import qrcode from 'qrcode-terminal'

async function testQR() {
    try {
        console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º QR –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...')
        
        const { state, saveCreds } = await useMultiFileAuthState('LynxSession')
        
        const sock = makeWASocket({
            auth: state,
            printQRInTerminal: true,
            logger: pino({ level: 'silent' }),
            browser: ['Lynx Bot', 'Chrome', '1.0.0']
        })
        
        sock.ev.on('connection.update', async (update) => {
            const { connection, lastDisconnect, qr } = update
            
            if (qr) {
                console.log('‚úÖ QR –∫–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!')
                qrcode.generate(qr, { small: true })
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º QR –≤ —Ñ–∞–π–ª
                const fs = await import('fs')
                const qrCode = await import('qrcode')
                const qrBuffer = await qrCode.toBuffer(qr)
                fs.writeFileSync('qr.png', qrBuffer)
                console.log('‚úÖ QR –∫–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ qr.png')
                
                // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç
                process.exit(0)
            }
            
            if (connection === 'close') {
                const shouldReconnect = (lastDisconnect?.error)?.output?.statusCode !== DisconnectReason.loggedOut
                console.log('‚ùå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ:', lastDisconnect?.error, ', –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:', shouldReconnect)
                if (!shouldReconnect) {
                    process.exit(1)
                }
            }
        })
        
        // –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            console.log('‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ')
            process.exit(1)
        }, 30000)
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è QR:', error)
        process.exit(1)
    }
}

testQR()
EOF

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç QR
echo "üß™ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç QR –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏..."
timeout 30s node test-qr-fix.js

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–ª—Å—è –ª–∏ QR —Ñ–∞–π–ª
if [ -f "qr.png" ]; then
    echo "‚úÖ QR —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
    ls -la qr.png
else
    echo "‚ùå QR —Ñ–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç—ã
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç—ã..."
pm2 start ecosystem-fixed.config.cjs

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–æ–≤..."
sleep 10
pm2 list

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫..."
pm2 startup
pm2 save

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏
echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏..."
sleep 5
if [ -f "logs/whatsapp-error-0.log" ]; then
    echo "üö® –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ WhatsApp:"
    tail -5 logs/whatsapp-error-0.log
fi

if [ -f "logs/telegram-error-1.log" ]; then
    echo "üö® –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ Telegram:"
    tail -5 logs/telegram-error-1.log
fi

echo ""
echo "üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo "========================="
echo "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
echo "‚úÖ Baileys —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
echo "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å —Ñ–∞–π–ª–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"
echo "‚úÖ –ë–æ—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–æ–≤:"
pm2 list
echo ""
echo "üì± –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /qr –≤ Telegram –±–æ—Ç–∞"
echo "üîç –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: pm2 logs"
