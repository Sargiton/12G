import fs from 'fs';
import path from 'path';
import { exec } from 'child_process';
import { promisify } from 'util';

const execAsync = promisify(exec);

const handler = async (m, { conn, usedPrefix, command }) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    if (!m.isOwner) {
      return m.reply('‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –±–æ—Ç–∞');
    }

    let clearedCount = 0;
    const clearedItems = [];

    // 1. –û—á–∏—Å—Ç–∫–∞ QR —Ñ–∞–π–ª–æ–≤ –≤ –∫–æ—Ä–Ω–µ
    const rootFiles = fs.readdirSync('.');
    rootFiles.forEach(file => {
      if (file.includes('qr') || file.includes('QR') || file === 'qr.png' || file === 'qr.jpg') {
        try {
          fs.unlinkSync(file);
          clearedCount++;
          clearedItems.push(`üìÑ ${file}`);
        } catch (err) {
          console.log(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è QR —Ñ–∞–π–ª–∞ ${file}:`, err.message);
        }
      }
    });

    // 2. –û—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ QR –∫–æ–¥–æ–≤ –≤ tmp
    const tmpDir = './tmp';
    if (fs.existsSync(tmpDir)) {
      const files = fs.readdirSync(tmpDir);
      files.forEach(file => {
        if (file.includes('qr') || file.includes('QR') || file.endsWith('.png') || file.endsWith('.jpg')) {
          try {
            fs.unlinkSync(path.join(tmpDir, file));
            clearedCount++;
            clearedItems.push(`üìÅ tmp/${file}`);
          } catch (err) {
            console.log(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è ${file}:`, err.message);
          }
        }
      });
    }

    // 3. –û—á–∏—Å—Ç–∫–∞ —Å–µ—Å—Å–∏–π WhatsApp
    const sessionDirs = ['./LynxSession', './BackupSession'];
    sessionDirs.forEach(dir => {
      if (fs.existsSync(dir)) {
        try {
          const files = fs.readdirSync(dir);
          files.forEach(file => {
            if (file !== 'creds.json') {
              try {
                fs.unlinkSync(path.join(dir, file));
                clearedCount++;
                clearedItems.push(`üóÇÔ∏è ${dir}/${file}`);
              } catch (err) {
                console.log(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è ${file}:`, err.message);
              }
            }
          });
        } catch (err) {
          console.log(`‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ ${dir}:`, err.message);
        }
      }
    });

    // 4. –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Node.js
    try {
      await execAsync('npm cache clean --force');
      clearedItems.push('üßπ npm cache');
    } catch (err) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ npm cache:', err.message);
    }

    // 5. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ WhatsApp –±–æ—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ QR
    try {
      await execAsync('pm2 restart whatsapp-bot');
      clearedItems.push('üîÑ WhatsApp bot restarted');
    } catch (err) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', err.message);
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    const report = `‚úÖ QR –∫—ç—à –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω!\n\nüóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${clearedCount}\n\nüìã –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:\n${clearedItems.map(item => `  ‚Ä¢ ${item}`).join('\n')}\n\nüîÑ WhatsApp –±–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω\nüì± –ù–æ–≤—ã–π QR –∫–æ–¥ –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—Ä–æ—Å–µ`;

    m.reply(report);

    console.log(`üßπ QR cache completely cleared by owner: ${clearedCount} items removed`);

  } catch (error) {
    console.error('‚ùå Clear QR cache error:', error);
    m.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞ QR –∫–æ–¥–æ–≤: ' + error.message);
  }
};

handler.help = ['clearqrcache'];
handler.tags = ['owner'];
handler.command = /^(clearqrcache|–æ—á–∏—Å—Ç–∏—Ç—åqr|qrclear)$/i;
handler.owner = true;

export default handler;
