import cacheManager from '../lib/cache.js';

const handler = async (m, { conn, usedPrefix, command }) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    if (!m.isOwner) {
      return m.reply('‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –±–æ—Ç–∞');
    }

    // –û—á–∏—â–∞–µ–º –≤—Å–µ QR –∫–æ–¥—ã –∏–∑ –∫—ç—à–∞
    const qrKeys = cacheManager.nodeCache.keys().filter(key => key.startsWith('qr_'));
    
    for (const key of qrKeys) {
      cacheManager.nodeCache.del(key);
    }

    // –û—á–∏—â–∞–µ–º –æ–±—â–∏–π –∫—ç—à
    await cacheManager.clear();

    const clearedCount = qrKeys.length;
    
    m.reply(`‚úÖ –ö—ç—à QR –∫–æ–¥–æ–≤ –æ—á–∏—â–µ–Ω!\n\nüóëÔ∏è –£–¥–∞–ª–µ–Ω–æ QR –∫–æ–¥–æ–≤: ${clearedCount}\nüßπ –û–±—â–∏–π –∫—ç—à –æ—á–∏—â–µ–Ω\n\n–¢–µ–ø–µ—Ä—å –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—Ä–æ—Å–µ QR –∫–æ–¥–∞ –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π.`);

    console.log(`üßπ QR cache cleared by owner: ${clearedCount} QR codes removed`);

  } catch (error) {
    console.error('‚ùå Clear QR cache error:', error);
    m.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞ QR –∫–æ–¥–æ–≤');
  }
};

handler.help = ['clearqrcache'];
handler.tags = ['owner'];
handler.command = /^(clearqrcache|–æ—á–∏—Å—Ç–∏—Ç—åqr|qrclear)$/i;
handler.owner = true;

export default handler;
