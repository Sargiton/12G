#!/bin/bash

echo "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¢–û–ß–ù–û–ô –û–®–ò–ë–ö–ò –í HANDLER.JS"
echo "=========================================="

cd /root/12G

echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç—ã..."
pm2 stop all

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–æ–∫–∏ –≤–æ–∫—Ä—É–≥ 506..."

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –≤–æ–∫—Ä—É–≥ 506
echo "üìã –°—Ç—Ä–æ–∫–∏ 500-510:"
sed -n '500,510p' handler.js

echo ""
echo "üìã –°—Ç—Ä–æ–∫–∏ 490-500:"
sed -n '490,500p' handler.js

echo ""
echo "üîç –ò—â–µ–º –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ –±–ª–æ–∫–∏..."

# –ò—â–µ–º –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ —Å–∫–æ–±–∫–∏ –∏ –±–ª–æ–∫–∏
echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —Å–∫–æ–±–æ–∫:"
grep -n "{" handler.js | tail -10
grep -n "}" handler.js | tail -10

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥ —Å—Ç—Ä–æ–∫–æ–π 506..."

# –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥ —Å—Ç—Ä–æ–∫–æ–π 506
echo "üìã –ü–æ—Å–ª–µ–¥–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–¥ 506:"
grep -n "function\|export" handler.js | grep -B5 -A5 "506"

echo ""
echo "üîß –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é handler.js..."

# –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
cat > handler-minimal.js << 'EOF'
import { generateWAMessageFromContent } from "@whiskeysockets/baileys" 
import { smsg } from './lib/simple.js'
import { format } from 'util'
import { fileURLToPath } from 'url'
import path, { join } from 'path'
import { unwatchFile, watchFile } from 'fs'
import chalk from 'chalk'   
import fetch from 'node-fetch' 
import ws from 'ws'
import './plugins/_content.js'

const { proto } = (await import('@whiskeysockets/baileys')).default
const isNumber = x => typeof x === 'number' && !isNaN(x)
const delay = ms => isNumber(ms) && new Promise(resolve => setTimeout(function () {
clearTimeout(this)
resolve()
}, ms))

export async function handler(chatUpdate) {
  console.log('Handler function called');
  return;
}

export async function participantsUpdate({ id, participants, action }) {
  console.log('Participants update called');
  return;
}

export async function groupsUpdate(groupsUpdate) {
  console.log('Groups update called');
  return;
}

export async function callUpdate(callUpdate) {
  console.log('Call update called');
  return;
}

export async function deleteUpdate(message) {
  console.log('Delete update called');
  return;
}
EOF

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é..."
if node -c handler-minimal.js; then
    echo "‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ç–æ–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã..."
node -e "
try {
  import('./lib/simple.js').then(() => console.log('‚úÖ simple.js - OK')).catch(e => console.log('‚ùå simple.js:', e.message));
} catch (e) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ simple.js:', e.message);
}
"

echo ""
echo "‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê"
