#!/bin/bash

echo "üöÄ –ü–û–õ–ù–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê –ù–ê –°–ï–†–í–ï–†–ï"
echo "=============================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã root
if [ "$EUID" -ne 0 ]; then
    log_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –æ—Ç –∏–º–µ–Ω–∏ root"
    exit 1
fi

# –®–∞–≥ 1: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
apt update -y
apt upgrade -y
log_success "–°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"

# –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
apt install -y curl wget git nano htop screen unzip
log_success "–ü–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js..."
if ! command -v node &> /dev/null; then
    log_warning "Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
    apt-get install -y nodejs
    log_success "Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    log_success "Node.js —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏–∏
log_info "–í–µ—Ä—Å–∏–∏ Node.js –∏ npm:"
node --version
npm --version

# –®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2
log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2..."
if ! command -v pm2 &> /dev/null; then
    npm install -g pm2
    log_success "PM2 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    log_success "PM2 —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –®–∞–≥ 5: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
pm2 stop all 2>/dev/null
pm2 delete all 2>/dev/null
pkill -f node 2>/dev/null
sleep 3
log_success "–í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –®–∞–≥ 6: –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
log_info "–ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞..."
cd /root

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ø–∞–ø–∫—É –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ -d "12G" ]; then
    log_warning "–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞..."
    rm -rf 12G
fi

# –ö–ª–æ–Ω–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç
log_info "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å Git..."
git clone https://github.com/Sargiton/12G.git
cd 12G
log_success "–ü—Ä–æ–µ–∫—Ç —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"

# –®–∞–≥ 7: –û—á–∏—Å—Ç–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞
log_info "–û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
rm -rf node_modules
rm -f package-lock.json
rm -rf LynxSession/*
rm -rf BackupSession/*
rm -f qr.png qr.jpg
rm -rf tmp/*
log_success "–ü—Ä–æ–µ–∫—Ç –æ—á–∏—â–µ–Ω"

# –®–∞–≥ 8: –ó–∞–º–µ–Ω–∞ package.json
log_info "–ó–∞–º–µ–Ω–∞ package.json –Ω–∞ –æ—á–∏—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é..."
if [ -f "package-clean.json" ]; then
    cp package-clean.json package.json
    log_success "package.json –∑–∞–º–µ–Ω–µ–Ω"
else
    log_error "–§–∞–π–ª package-clean.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –®–∞–≥ 9: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
npm install --force
if [ $? -eq 0 ]; then
    log_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    log_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    exit 1
fi

# –®–∞–≥ 10: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ baileys
log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ baileys..."
npm install baileys@latest --save --force
if [ $? -eq 0 ]; then
    log_success "Baileys —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    log_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ baileys"
    exit 1
fi

# –®–∞–≥ 11: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ baileys
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ baileys..."
if [ -d "node_modules/baileys" ]; then
    log_success "Baileys —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    ls -la node_modules/baileys/package.json
    echo "–í–µ—Ä—Å–∏—è: $(cat node_modules/baileys/package.json | grep '"version"' | cut -d'"' -f4)"
else
    log_error "Baileys –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –®–∞–≥ 12: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–ø–æ–∫
log_info "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–ø–æ–∫..."
mkdir -p LynxSession BackupSession tmp logs
log_success "–ü–∞–ø–∫–∏ —Å–æ–∑–¥–∞–Ω—ã"

# –®–∞–≥ 13: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ baileys
log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ baileys..."
find . -name "*.js" -type f -exec sed -i 's/@whiskeysockets\/baileys/baileys/g' {} \;
find . -name "*.js" -type f -exec sed -i 's/from.*@whiskeysockets\/baileys/from "baileys"/g' {} \;
find . -name "*.js" -type f -exec sed -i 's/import.*@whiskeysockets\/baileys/import.*baileys/g' {} \;
log_success "–ò–º–ø–æ—Ä—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã"

# –®–∞–≥ 14: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ —Ñ–∞–π–ª–æ–≤
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ —Ñ–∞–π–ª–æ–≤..."
if node -c index.js; then
    log_success "–°–∏–Ω—Ç–∞–∫—Å–∏—Å index.js –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
else
    log_error "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤ index.js"
    exit 1
fi

if node -c telegram-bot.cjs; then
    log_success "–°–∏–Ω—Ç–∞–∫—Å–∏—Å telegram-bot.cjs –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
else
    log_error "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤ telegram-bot.cjs"
    exit 1
fi

# –®–∞–≥ 15: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PM2
log_info "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PM2..."
cat > ecosystem-final.config.cjs << 'EOF'
module.exports = {
  apps: [
    {
      name: 'whatsapp-bot',
      script: 'index.js',
      cwd: '/root/12G',
      instances: 1,
      autorestart: true,
      watch: false,
      max_memory_restart: '200M',
      env: {
        NODE_ENV: 'production',
        NODE_OPTIONS: '--max-old-space-size=512'
      },
      error_file: './logs/whatsapp-error-0.log',
      out_file: './logs/whatsapp-out-0.log',
      log_file: './logs/whatsapp-combined-0.log',
      time: true
    },
    {
      name: 'telegram-bot',
      script: 'telegram-bot.cjs',
      cwd: '/root/12G',
      instances: 1,
      autorestart: true,
      watch: false,
      max_memory_restart: '100M',
      env: {
        NODE_ENV: 'production'
      },
      error_file: './logs/telegram-error-1.log',
      out_file: './logs/telegram-out-1.log',
      log_file: './logs/telegram-combined-1.log',
      time: true
    }
  ]
};
EOF
log_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è PM2 —Å–æ–∑–¥–∞–Ω–∞"

# –®–∞–≥ 16: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ QR –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
log_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ QR –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏..."
cat > test-qr-final.js << 'EOF'
import { makeWASocket, DisconnectReason, useMultiFileAuthState } from 'baileys'
import pino from 'pino'
import qrcode from 'qrcode-terminal'

async function testQR() {
    try {
        console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º QR –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...')
        
        const { state, saveCreds } = await useMultiFileAuthState('LynxSession')
        
        const sock = makeWASocket({
            auth: state,
            printQRInTerminal: true,
            logger: pino({ level: 'silent' }),
            browser: ['Lynx Bot', 'Chrome', '1.0.0']
        })
        
        sock.ev.on('connection.update', async (update) => {
            const { connection, lastDisconnect, qr } = update
            
            if (qr) {
                console.log('‚úÖ QR –∫–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!')
                qrcode.generate(qr, { small: true })
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º QR –≤ —Ñ–∞–π–ª
                const fs = await import('fs')
                const qrCode = await import('qrcode')
                const qrBuffer = await qrCode.toBuffer(qr)
                fs.writeFileSync('qr.png', qrBuffer)
                console.log('‚úÖ QR –∫–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ qr.png')
                
                // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç
                process.exit(0)
            }
            
            if (connection === 'close') {
                const shouldReconnect = (lastDisconnect?.error)?.output?.statusCode !== DisconnectReason.loggedOut
                console.log('‚ùå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ:', lastDisconnect?.error, ', –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:', shouldReconnect)
                if (!shouldReconnect) {
                    process.exit(1)
                }
            }
        })
        
        // –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            console.log('‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ')
            process.exit(1)
        }, 30000)
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è QR:', error)
        process.exit(1)
    }
}

testQR()
EOF

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç QR
log_info "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ QR –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏..."
timeout 30s node test-qr-final.js

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–ª—Å—è –ª–∏ QR —Ñ–∞–π–ª
if [ -f "qr.png" ]; then
    log_success "QR —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
    ls -la qr.png
else
    log_warning "QR —Ñ–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω, –Ω–æ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
fi

# –®–∞–≥ 17: –ó–∞–ø—É—Å–∫ –±–æ—Ç–æ–≤
log_info "–ó–∞–ø—É—Å–∫ –±–æ—Ç–æ–≤..."
pm2 start ecosystem-final.config.cjs
if [ $? -eq 0 ]; then
    log_success "–ë–æ—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã"
else
    log_error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–æ–≤"
    exit 1
fi

# –®–∞–≥ 18: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–æ–≤..."
sleep 10
pm2 list

# –®–∞–≥ 19: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞..."
pm2 startup
pm2 save
log_success "–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

# –®–∞–≥ 20: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏..."
sleep 5
if [ -f "logs/whatsapp-error-0.log" ]; then
    log_info "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ WhatsApp:"
    tail -5 logs/whatsapp-error-0.log
fi

if [ -f "logs/telegram-error-1.log" ]; then
    log_info "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ Telegram:"
    tail -5 logs/telegram-error-1.log
fi

# –®–∞–≥ 21: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
log_info "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
echo ""
echo "üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo "======================"
echo "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
echo "‚úÖ Baileys –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏"
echo "‚úÖ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
echo "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å —Ñ–∞–π–ª–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
echo "‚úÖ –ë–æ—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–æ–≤:"
pm2 list
echo ""
echo "üì± –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /qr –≤ Telegram –±–æ—Ç–∞"
echo "üîç –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: pm2 logs"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  pm2 list          - —Å—Ç–∞—Ç—É—Å –±–æ—Ç–æ–≤"
echo "  pm2 logs          - –ª–æ–≥–∏ –±–æ—Ç–æ–≤"
echo "  pm2 monit         - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
echo "  pm2 restart all   - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –±–æ—Ç–æ–≤"
echo "  pm2 stop all      - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –±–æ—Ç–æ–≤"
